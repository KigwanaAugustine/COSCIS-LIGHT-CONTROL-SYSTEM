
light_control_system.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000504  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000504  00000598  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000082  00800068  00800068  000005a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00000610  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000130c  00000000  00000000  00000738  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c3  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000966  00000000  00000000  00002207  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000224  00000000  00000000  00002b70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c3  00000000  00000000  00002d94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000075f  00000000  00000000  00003457  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00003bb6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e0       	ldi	r30, 0x04	; 4
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 3e       	cpi	r26, 0xEA	; 234
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 c7 00 	call	0x18e	; 0x18e <main>
  8a:	0c 94 80 02 	jmp	0x500	; 0x500 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z18receive_UDR_stringv>:

//store username in EEPROM
void store_username(char *username)
{
	sei();  // Enable global interrupts
	eeprom_update_block((const void*)username, (void*)(EEPROM_ADDRESS + 128), strlen(username) + 1); //store username
  92:	1f 93       	push	r17
  94:	cf 93       	push	r28
  96:	df 93       	push	r29
  98:	c0 e0       	ldi	r28, 0x00	; 0
  9a:	d0 e0       	ldi	r29, 0x00	; 0
  9c:	c0 38       	cpi	r28, 0x80	; 128
  9e:	d1 05       	cpc	r29, r1
  a0:	34 f5       	brge	.+76     	; 0xee <_Z18receive_UDR_stringv+0x5c>
  a2:	5f 9b       	sbis	0x0b, 7	; 11
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <_Z18receive_UDR_stringv+0x10>
  a6:	1c b1       	in	r17, 0x0c	; 12
  a8:	81 2f       	mov	r24, r17
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	0e 94 3a 02 	call	0x474	; 0x474 <isspace>
  b0:	89 2b       	or	r24, r25
  b2:	71 f0       	breq	.+28     	; 0xd0 <_Z18receive_UDR_stringv+0x3e>
  b4:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <__data_end>
  b8:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <__data_end+0x1>
  bc:	e6 59       	subi	r30, 0x96	; 150
  be:	ff 4f       	sbci	r31, 0xFF	; 255
  c0:	10 82       	st	Z, r1
  c2:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__data_end+0x1>
  c6:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__data_end>
  ca:	8a e6       	ldi	r24, 0x6A	; 106
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0f c0       	rjmp	.+30     	; 0xee <_Z18receive_UDR_stringv+0x5c>
  d0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
  d4:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <__data_end+0x1>
  d8:	fc 01       	movw	r30, r24
  da:	e6 59       	subi	r30, 0x96	; 150
  dc:	ff 4f       	sbci	r31, 0xFF	; 255
  de:	10 83       	st	Z, r17
  e0:	01 96       	adiw	r24, 0x01	; 1
  e2:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__data_end+0x1>
  e6:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__data_end>
  ea:	21 96       	adiw	r28, 0x01	; 1
  ec:	d7 cf       	rjmp	.-82     	; 0x9c <_Z18receive_UDR_stringv+0xa>
  ee:	df 91       	pop	r29
  f0:	cf 91       	pop	r28
  f2:	1f 91       	pop	r17
  f4:	08 95       	ret

000000f6 <_Z8mcu_initv>:
  f6:	8f ef       	ldi	r24, 0xFF	; 255
  f8:	87 bb       	out	0x17, r24	; 23
  fa:	8a bb       	out	0x1a, r24	; 26
  fc:	14 ba       	out	0x14, r1	; 20
  fe:	8b b3       	in	r24, 0x1b	; 27
 100:	80 64       	ori	r24, 0x40	; 64
 102:	8b bb       	out	0x1b, r24	; 27
 104:	87 e6       	ldi	r24, 0x67	; 103
 106:	89 b9       	out	0x09, r24	; 9
 108:	87 e0       	ldi	r24, 0x07	; 7
 10a:	80 bd       	out	0x20, r24	; 32
 10c:	88 e9       	ldi	r24, 0x98	; 152
 10e:	8a b9       	out	0x0a, r24	; 10
 110:	78 94       	sei
 112:	08 95       	ret

00000114 <_Z13detect_motionv>:
 114:	9e 9b       	sbis	0x13, 6	; 19
 116:	03 c0       	rjmp	.+6      	; 0x11e <_Z13detect_motionv+0xa>
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	08 95       	ret
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	08 95       	ret

00000124 <_Z21check_light_intensityv>:
 124:	83 b3       	in	r24, 0x13	; 19
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	08 95       	ret

0000012c <_Z14USART_Transmith>:
 12c:	5d 9b       	sbis	0x0b, 5	; 11
 12e:	fe cf       	rjmp	.-4      	; 0x12c <_Z14USART_Transmith>
 130:	2f ef       	ldi	r18, 0xFF	; 255
 132:	31 ee       	ldi	r19, 0xE1	; 225
 134:	94 e0       	ldi	r25, 0x04	; 4
 136:	21 50       	subi	r18, 0x01	; 1
 138:	30 40       	sbci	r19, 0x00	; 0
 13a:	90 40       	sbci	r25, 0x00	; 0
 13c:	e1 f7       	brne	.-8      	; 0x136 <_Z14USART_Transmith+0xa>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <_Z14USART_Transmith+0x14>
 140:	00 00       	nop
 142:	8c b9       	out	0x0c, r24	; 12
 144:	08 95       	ret

00000146 <_Z21USART_Transmit_StringPc>:
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	ec 01       	movw	r28, r24
 14c:	88 81       	ld	r24, Y
 14e:	88 23       	and	r24, r24
 150:	21 f0       	breq	.+8      	; 0x15a <_Z21USART_Transmit_StringPc+0x14>
 152:	0e 94 96 00 	call	0x12c	; 0x12c <_Z14USART_Transmith>
 156:	21 96       	adiw	r28, 0x01	; 1
 158:	f9 cf       	rjmp	.-14     	; 0x14c <_Z21USART_Transmit_StringPc+0x6>
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	08 95       	ret

00000160 <_Z8light_oni>:
 160:	9b b3       	in	r25, 0x1b	; 27
 162:	21 e0       	ldi	r18, 0x01	; 1
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <_Z8light_oni+0xc>
 168:	22 0f       	add	r18, r18
 16a:	33 1f       	adc	r19, r19
 16c:	8a 95       	dec	r24
 16e:	e2 f7       	brpl	.-8      	; 0x168 <_Z8light_oni+0x8>
 170:	29 2b       	or	r18, r25
 172:	2b bb       	out	0x1b, r18	; 27
 174:	08 95       	ret

00000176 <_Z9light_offi>:
 176:	9b b3       	in	r25, 0x1b	; 27
 178:	21 e0       	ldi	r18, 0x01	; 1
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <_Z9light_offi+0xc>
 17e:	22 0f       	add	r18, r18
 180:	33 1f       	adc	r19, r19
 182:	8a 95       	dec	r24
 184:	e2 f7       	brpl	.-8      	; 0x17e <_Z9light_offi+0x8>
 186:	20 95       	com	r18
 188:	29 23       	and	r18, r25
 18a:	2b bb       	out	0x1b, r18	; 27
 18c:	08 95       	ret

0000018e <main>:
 18e:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z8mcu_initv>
 192:	0e 94 92 00 	call	0x124	; 0x124 <_Z21check_light_intensityv>
 196:	89 2b       	or	r24, r25
 198:	29 f0       	breq	.+10     	; 0x1a4 <main+0x16>
 19a:	84 e0       	ldi	r24, 0x04	; 4
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
 1a2:	04 c0       	rjmp	.+8      	; 0x1ac <main+0x1e>
 1a4:	84 e0       	ldi	r24, 0x04	; 4
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 1ac:	0e 94 8a 00 	call	0x114	; 0x114 <_Z13detect_motionv>
 1b0:	89 2b       	or	r24, r25
 1b2:	29 f0       	breq	.+10     	; 0x1be <main+0x30>
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
 1bc:	ea cf       	rjmp	.-44     	; 0x192 <main+0x4>
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 1c6:	e5 cf       	rjmp	.-54     	; 0x192 <main+0x4>

000001c8 <_Z10switch_offv>:
 1c8:	0e 94 49 00 	call	0x92	; 0x92 <_Z18receive_UDR_stringv>
 1cc:	fc 01       	movw	r30, r24
 1ce:	80 81       	ld	r24, Z
 1d0:	81 33       	cpi	r24, 0x31	; 49
 1d2:	29 f4       	brne	.+10     	; 0x1de <_Z10switch_offv+0x16>
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 1dc:	08 95       	ret
 1de:	82 33       	cpi	r24, 0x32	; 50
 1e0:	29 f4       	brne	.+10     	; 0x1ec <_Z10switch_offv+0x24>
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 1ea:	08 95       	ret
 1ec:	83 33       	cpi	r24, 0x33	; 51
 1ee:	29 f4       	brne	.+10     	; 0x1fa <_Z10switch_offv+0x32>
 1f0:	82 e0       	ldi	r24, 0x02	; 2
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 1f8:	08 95       	ret
 1fa:	84 33       	cpi	r24, 0x34	; 52
 1fc:	29 f4       	brne	.+10     	; 0x208 <_Z10switch_offv+0x40>
 1fe:	83 e0       	ldi	r24, 0x03	; 3
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 206:	08 95       	ret
 208:	85 33       	cpi	r24, 0x35	; 53
 20a:	21 f4       	brne	.+8      	; 0x214 <_Z10switch_offv+0x4c>
 20c:	84 e0       	ldi	r24, 0x04	; 4
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 214:	08 95       	ret

00000216 <_Z9switch_onv>:
 216:	0e 94 49 00 	call	0x92	; 0x92 <_Z18receive_UDR_stringv>
 21a:	fc 01       	movw	r30, r24
 21c:	80 81       	ld	r24, Z
 21e:	81 33       	cpi	r24, 0x31	; 49
 220:	91 f4       	brne	.+36     	; 0x246 <_Z9switch_onv+0x30>
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
 22a:	ff ef       	ldi	r31, 0xFF	; 255
 22c:	21 ee       	ldi	r18, 0xE1	; 225
 22e:	84 e0       	ldi	r24, 0x04	; 4
 230:	f1 50       	subi	r31, 0x01	; 1
 232:	20 40       	sbci	r18, 0x00	; 0
 234:	80 40       	sbci	r24, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <_Z9switch_onv+0x1a>
 238:	00 c0       	rjmp	.+0      	; 0x23a <_Z9switch_onv+0x24>
 23a:	00 00       	nop
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 244:	08 95       	ret
 246:	82 33       	cpi	r24, 0x32	; 50
 248:	91 f4       	brne	.+36     	; 0x26e <_Z9switch_onv+0x58>
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
 252:	9f ef       	ldi	r25, 0xFF	; 255
 254:	e1 ee       	ldi	r30, 0xE1	; 225
 256:	f4 e0       	ldi	r31, 0x04	; 4
 258:	91 50       	subi	r25, 0x01	; 1
 25a:	e0 40       	sbci	r30, 0x00	; 0
 25c:	f0 40       	sbci	r31, 0x00	; 0
 25e:	e1 f7       	brne	.-8      	; 0x258 <_Z9switch_onv+0x42>
 260:	00 c0       	rjmp	.+0      	; 0x262 <_Z9switch_onv+0x4c>
 262:	00 00       	nop
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 26c:	08 95       	ret
 26e:	83 33       	cpi	r24, 0x33	; 51
 270:	91 f4       	brne	.+36     	; 0x296 <_Z9switch_onv+0x80>
 272:	82 e0       	ldi	r24, 0x02	; 2
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
 27a:	2f ef       	ldi	r18, 0xFF	; 255
 27c:	81 ee       	ldi	r24, 0xE1	; 225
 27e:	94 e0       	ldi	r25, 0x04	; 4
 280:	21 50       	subi	r18, 0x01	; 1
 282:	80 40       	sbci	r24, 0x00	; 0
 284:	90 40       	sbci	r25, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <_Z9switch_onv+0x6a>
 288:	00 c0       	rjmp	.+0      	; 0x28a <_Z9switch_onv+0x74>
 28a:	00 00       	nop
 28c:	82 e0       	ldi	r24, 0x02	; 2
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 294:	08 95       	ret
 296:	84 33       	cpi	r24, 0x34	; 52
 298:	91 f4       	brne	.+36     	; 0x2be <_Z9switch_onv+0xa8>
 29a:	83 e0       	ldi	r24, 0x03	; 3
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
 2a2:	ef ef       	ldi	r30, 0xFF	; 255
 2a4:	f1 ee       	ldi	r31, 0xE1	; 225
 2a6:	24 e0       	ldi	r18, 0x04	; 4
 2a8:	e1 50       	subi	r30, 0x01	; 1
 2aa:	f0 40       	sbci	r31, 0x00	; 0
 2ac:	20 40       	sbci	r18, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <_Z9switch_onv+0x92>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <_Z9switch_onv+0x9c>
 2b2:	00 00       	nop
 2b4:	83 e0       	ldi	r24, 0x03	; 3
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 2bc:	08 95       	ret
 2be:	85 33       	cpi	r24, 0x35	; 53
 2c0:	89 f4       	brne	.+34     	; 0x2e4 <_Z9switch_onv+0xce>
 2c2:	84 e0       	ldi	r24, 0x04	; 4
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
 2ca:	8f ef       	ldi	r24, 0xFF	; 255
 2cc:	91 ee       	ldi	r25, 0xE1	; 225
 2ce:	e4 e0       	ldi	r30, 0x04	; 4
 2d0:	81 50       	subi	r24, 0x01	; 1
 2d2:	90 40       	sbci	r25, 0x00	; 0
 2d4:	e0 40       	sbci	r30, 0x00	; 0
 2d6:	e1 f7       	brne	.-8      	; 0x2d0 <_Z9switch_onv+0xba>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <_Z9switch_onv+0xc4>
 2da:	00 00       	nop
 2dc:	84 e0       	ldi	r24, 0x04	; 4
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
 2e4:	08 95       	ret

000002e6 <_Z14store_passwordPc>:
 2e6:	78 94       	sei
 2e8:	fc 01       	movw	r30, r24
 2ea:	01 90       	ld	r0, Z+
 2ec:	00 20       	and	r0, r0
 2ee:	e9 f7       	brne	.-6      	; 0x2ea <_Z14store_passwordPc+0x4>
 2f0:	31 97       	sbiw	r30, 0x01	; 1
 2f2:	af 01       	movw	r20, r30
 2f4:	48 1b       	sub	r20, r24
 2f6:	59 0b       	sbc	r21, r25
 2f8:	4f 5f       	subi	r20, 0xFF	; 255
 2fa:	5f 4f       	sbci	r21, 0xFF	; 255
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	0e 94 5f 02 	call	0x4be	; 0x4be <eeprom_update_block>
 304:	08 95       	ret

00000306 <_Z12get_passwordPc>:
} 

//retrieve user password from EEPROM
void get_password(char password[PASSWORD_LENGTH])
{
	eeprom_read_block((void*)password, (const void*)EEPROM_ADDRESS, PASSWORD_LENGTH);
 306:	44 e1       	ldi	r20, 0x14	; 20
 308:	50 e0       	ldi	r21, 0x00	; 0
 30a:	60 e0       	ldi	r22, 0x00	; 0
 30c:	70 e0       	ldi	r23, 0x00	; 0
 30e:	0e 94 4f 02 	call	0x49e	; 0x49e <eeprom_read_block>
 312:	08 95       	ret

00000314 <_Z13register_userv>:
	}
	
}

void register_user()
{
 314:	0f 93       	push	r16
 316:	1f 93       	push	r17
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	cd b7       	in	r28, 0x3d	; 61
 31e:	de b7       	in	r29, 0x3e	; 62
 320:	c0 58       	subi	r28, 0x80	; 128
 322:	d1 09       	sbc	r29, r1
 324:	0f b6       	in	r0, 0x3f	; 63
 326:	f8 94       	cli
 328:	de bf       	out	0x3e, r29	; 62
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	cd bf       	out	0x3d, r28	; 61

	char * password = receive_UDR_string();
 32e:	0e 94 49 00 	call	0x92	; 0x92 <_Z18receive_UDR_stringv>
 332:	8c 01       	movw	r16, r24
	//char * username = receive_UDR_string();
	
	int result = strcmp(password , "august");
 334:	60 e6       	ldi	r22, 0x60	; 96
 336:	70 e0       	ldi	r23, 0x00	; 0
 338:	0e 94 43 02 	call	0x486	; 0x486 <strcmp>
	
	if (result == 0) //D
 33c:	89 2b       	or	r24, r25
 33e:	69 f4       	brne	.+26     	; 0x35a <_Z13register_userv+0x46>
	{
		light_on(LLT1);
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 348:	2f ef       	ldi	r18, 0xFF	; 255
 34a:	89 e6       	ldi	r24, 0x69	; 105
 34c:	98 e1       	ldi	r25, 0x18	; 24
 34e:	21 50       	subi	r18, 0x01	; 1
 350:	80 40       	sbci	r24, 0x00	; 0
 352:	90 40       	sbci	r25, 0x00	; 0
 354:	e1 f7       	brne	.-8      	; 0x34e <_Z13register_userv+0x3a>
 356:	00 c0       	rjmp	.+0      	; 0x358 <_Z13register_userv+0x44>
 358:	00 00       	nop
		
	}

	char buf[128] ; //D

	get_password(buf); //D
 35a:	ce 01       	movw	r24, r28
 35c:	01 96       	adiw	r24, 0x01	; 1
 35e:	0e 94 83 01 	call	0x306	; 0x306 <_Z12get_passwordPc>

	if ( strcmp(buf , "august") == 0 ) //D
 362:	60 e6       	ldi	r22, 0x60	; 96
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	ce 01       	movw	r24, r28
 368:	01 96       	adiw	r24, 0x01	; 1
 36a:	0e 94 43 02 	call	0x486	; 0x486 <strcmp>
 36e:	89 2b       	or	r24, r25
 370:	21 f4       	brne	.+8      	; 0x37a <_Z13register_userv+0x66>
	{
		light_off(LLT1);
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
	}
	
	store_password(password);
 37a:	c8 01       	movw	r24, r16
 37c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_Z14store_passwordPc>
	//store_username(username);

}
 380:	c0 58       	subi	r28, 0x80	; 128
 382:	df 4f       	sbci	r29, 0xFF	; 255
 384:	0f b6       	in	r0, 0x3f	; 63
 386:	f8 94       	cli
 388:	de bf       	out	0x3e, r29	; 62
 38a:	0f be       	out	0x3f, r0	; 63
 38c:	cd bf       	out	0x3d, r28	; 61
 38e:	df 91       	pop	r29
 390:	cf 91       	pop	r28
 392:	1f 91       	pop	r17
 394:	0f 91       	pop	r16
 396:	08 95       	ret

00000398 <_Z12get_usernamePc>:
}

//retrieve username from EEPROM
void get_username(char username[PASSWORD_LENGTH])
{
	eeprom_read_block((void*)username, (const void*)(EEPROM_ADDRESS + 128), PASSWORD_LENGTH);
 398:	44 e1       	ldi	r20, 0x14	; 20
 39a:	50 e0       	ldi	r21, 0x00	; 0
 39c:	60 e8       	ldi	r22, 0x80	; 128
 39e:	70 e0       	ldi	r23, 0x00	; 0
 3a0:	0e 94 4f 02 	call	0x49e	; 0x49e <eeprom_read_block>
 3a4:	08 95       	ret

000003a6 <_Z5loginv>:
  UDR = data;
}

//sends the password and username for verification to the mobile app at login
void login()
{
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	cd b7       	in	r28, 0x3d	; 61
 3ac:	de b7       	in	r29, 0x3e	; 62
 3ae:	a8 97       	sbiw	r28, 0x28	; 40
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	f8 94       	cli
 3b4:	de bf       	out	0x3e, r29	; 62
 3b6:	0f be       	out	0x3f, r0	; 63
 3b8:	cd bf       	out	0x3d, r28	; 61
	char password[PASSWORD_LENGTH];
	char username[PASSWORD_LENGTH];

	get_password(password);
 3ba:	ce 01       	movw	r24, r28
 3bc:	01 96       	adiw	r24, 0x01	; 1
 3be:	0e 94 83 01 	call	0x306	; 0x306 <_Z12get_passwordPc>
	get_username(username);
 3c2:	ce 01       	movw	r24, r28
 3c4:	45 96       	adiw	r24, 0x15	; 21
 3c6:	0e 94 cc 01 	call	0x398	; 0x398 <_Z12get_usernamePc>

	// Enable transmitter
	UCSRB |= (1 << TXEN);
 3ca:	8a b1       	in	r24, 0x0a	; 10
 3cc:	88 60       	ori	r24, 0x08	; 8
 3ce:	8a b9       	out	0x0a, r24	; 10

	//TO-DO , convert the arrays password and username into strings before sending them

	//transmit both string and password
	USART_Transmit_String(password);
 3d0:	ce 01       	movw	r24, r28
 3d2:	01 96       	adiw	r24, 0x01	; 1
 3d4:	0e 94 a3 00 	call	0x146	; 0x146 <_Z21USART_Transmit_StringPc>
	USART_Transmit_String(username);
 3d8:	ce 01       	movw	r24, r28
 3da:	45 96       	adiw	r24, 0x15	; 21
 3dc:	0e 94 a3 00 	call	0x146	; 0x146 <_Z21USART_Transmit_StringPc>
}
 3e0:	a8 96       	adiw	r28, 0x28	; 40
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	f8 94       	cli
 3e6:	de bf       	out	0x3e, r29	; 62
 3e8:	0f be       	out	0x3f, r0	; 63
 3ea:	cd bf       	out	0x3d, r28	; 61
 3ec:	df 91       	pop	r29
 3ee:	cf 91       	pop	r28
 3f0:	08 95       	ret

000003f2 <__vector_13>:
		
	}
}


ISR(USART_RXC_vect) {
 3f2:	1f 92       	push	r1
 3f4:	0f 92       	push	r0
 3f6:	0f b6       	in	r0, 0x3f	; 63
 3f8:	0f 92       	push	r0
 3fa:	11 24       	eor	r1, r1
 3fc:	2f 93       	push	r18
 3fe:	3f 93       	push	r19
 400:	4f 93       	push	r20
 402:	5f 93       	push	r21
 404:	6f 93       	push	r22
 406:	7f 93       	push	r23
 408:	8f 93       	push	r24
 40a:	9f 93       	push	r25
 40c:	af 93       	push	r26
 40e:	bf 93       	push	r27
 410:	ef 93       	push	r30
 412:	ff 93       	push	r31
	
	light_on(SECURITY);
 414:	84 e0       	ldi	r24, 0x04	; 4
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 b0 00 	call	0x160	; 0x160 <_Z8light_oni>
	
	char flag = UDR;  // Read the received character
 41c:	8c b1       	in	r24, 0x0c	; 12
	
	

	switch (flag)
 41e:	8f 34       	cpi	r24, 0x4F	; 79
 420:	91 f0       	breq	.+36     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 422:	18 f4       	brcc	.+6      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 424:	8c 34       	cpi	r24, 0x4C	; 76
 426:	31 f0       	breq	.+12     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 428:	10 c0       	rjmp	.+32     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 42a:	82 35       	cpi	r24, 0x52	; 82
 42c:	31 f0       	breq	.+12     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 42e:	83 35       	cpi	r24, 0x53	; 83
 430:	39 f0       	breq	.+14     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 432:	0b c0       	rjmp	.+22     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
	{
	case 'L': //login user 
		login();
 434:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <_Z5loginv>
		break;
 438:	08 c0       	rjmp	.+16     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
	
	case 'R': //register user
		register_user();
 43a:	0e 94 8a 01 	call	0x314	; 0x314 <_Z13register_userv>
		break;
 43e:	05 c0       	rjmp	.+10     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>

	case 'S': //switch on light
		switch_on();
 440:	0e 94 0b 01 	call	0x216	; 0x216 <_Z9switch_onv>
		break;
 444:	02 c0       	rjmp	.+4      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>

	case 'O': //switch off light
		switch_off();
 446:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z10switch_offv>
	
	default:
		break;
	}
	
	light_off(SECURITY);
 44a:	84 e0       	ldi	r24, 0x04	; 4
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 bb 00 	call	0x176	; 0x176 <_Z9light_offi>
	
}
 452:	ff 91       	pop	r31
 454:	ef 91       	pop	r30
 456:	bf 91       	pop	r27
 458:	af 91       	pop	r26
 45a:	9f 91       	pop	r25
 45c:	8f 91       	pop	r24
 45e:	7f 91       	pop	r23
 460:	6f 91       	pop	r22
 462:	5f 91       	pop	r21
 464:	4f 91       	pop	r20
 466:	3f 91       	pop	r19
 468:	2f 91       	pop	r18
 46a:	0f 90       	pop	r0
 46c:	0f be       	out	0x3f, r0	; 63
 46e:	0f 90       	pop	r0
 470:	1f 90       	pop	r1
 472:	18 95       	reti

00000474 <isspace>:
 474:	91 11       	cpse	r25, r1
 476:	0c 94 4c 02 	jmp	0x498	; 0x498 <__ctype_isfalse>
 47a:	80 32       	cpi	r24, 0x20	; 32
 47c:	19 f0       	breq	.+6      	; 0x484 <isspace+0x10>
 47e:	89 50       	subi	r24, 0x09	; 9
 480:	85 50       	subi	r24, 0x05	; 5
 482:	c8 f7       	brcc	.-14     	; 0x476 <isspace+0x2>
 484:	08 95       	ret

00000486 <strcmp>:
 486:	fb 01       	movw	r30, r22
 488:	dc 01       	movw	r26, r24
 48a:	8d 91       	ld	r24, X+
 48c:	01 90       	ld	r0, Z+
 48e:	80 19       	sub	r24, r0
 490:	01 10       	cpse	r0, r1
 492:	d9 f3       	breq	.-10     	; 0x48a <strcmp+0x4>
 494:	99 0b       	sbc	r25, r25
 496:	08 95       	ret

00000498 <__ctype_isfalse>:
 498:	99 27       	eor	r25, r25
 49a:	88 27       	eor	r24, r24

0000049c <__ctype_istrue>:
 49c:	08 95       	ret

0000049e <eeprom_read_block>:
 49e:	dc 01       	movw	r26, r24
 4a0:	cb 01       	movw	r24, r22

000004a2 <eeprom_read_blraw>:
 4a2:	fc 01       	movw	r30, r24
 4a4:	e1 99       	sbic	0x1c, 1	; 28
 4a6:	fe cf       	rjmp	.-4      	; 0x4a4 <eeprom_read_blraw+0x2>
 4a8:	06 c0       	rjmp	.+12     	; 0x4b6 <eeprom_read_blraw+0x14>
 4aa:	ff bb       	out	0x1f, r31	; 31
 4ac:	ee bb       	out	0x1e, r30	; 30
 4ae:	e0 9a       	sbi	0x1c, 0	; 28
 4b0:	31 96       	adiw	r30, 0x01	; 1
 4b2:	0d b2       	in	r0, 0x1d	; 29
 4b4:	0d 92       	st	X+, r0
 4b6:	41 50       	subi	r20, 0x01	; 1
 4b8:	50 40       	sbci	r21, 0x00	; 0
 4ba:	b8 f7       	brcc	.-18     	; 0x4aa <eeprom_read_blraw+0x8>
 4bc:	08 95       	ret

000004be <eeprom_update_block>:
 4be:	dc 01       	movw	r26, r24
 4c0:	a4 0f       	add	r26, r20
 4c2:	b5 1f       	adc	r27, r21
 4c4:	41 50       	subi	r20, 0x01	; 1
 4c6:	50 40       	sbci	r21, 0x00	; 0
 4c8:	48 f0       	brcs	.+18     	; 0x4dc <eeprom_update_block+0x1e>
 4ca:	cb 01       	movw	r24, r22
 4cc:	84 0f       	add	r24, r20
 4ce:	95 1f       	adc	r25, r21
 4d0:	2e 91       	ld	r18, -X
 4d2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <eeprom_update_r18>
 4d6:	41 50       	subi	r20, 0x01	; 1
 4d8:	50 40       	sbci	r21, 0x00	; 0
 4da:	d0 f7       	brcc	.-12     	; 0x4d0 <eeprom_update_block+0x12>
 4dc:	08 95       	ret

000004de <eeprom_update_byte>:
 4de:	26 2f       	mov	r18, r22

000004e0 <eeprom_update_r18>:
 4e0:	e1 99       	sbic	0x1c, 1	; 28
 4e2:	fe cf       	rjmp	.-4      	; 0x4e0 <eeprom_update_r18>
 4e4:	9f bb       	out	0x1f, r25	; 31
 4e6:	8e bb       	out	0x1e, r24	; 30
 4e8:	e0 9a       	sbi	0x1c, 0	; 28
 4ea:	01 97       	sbiw	r24, 0x01	; 1
 4ec:	0d b2       	in	r0, 0x1d	; 29
 4ee:	02 16       	cp	r0, r18
 4f0:	31 f0       	breq	.+12     	; 0x4fe <eeprom_update_r18+0x1e>
 4f2:	2d bb       	out	0x1d, r18	; 29
 4f4:	0f b6       	in	r0, 0x3f	; 63
 4f6:	f8 94       	cli
 4f8:	e2 9a       	sbi	0x1c, 2	; 28
 4fa:	e1 9a       	sbi	0x1c, 1	; 28
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	08 95       	ret

00000500 <_exit>:
 500:	f8 94       	cli

00000502 <__stop_program>:
 502:	ff cf       	rjmp	.-2      	; 0x502 <__stop_program>
