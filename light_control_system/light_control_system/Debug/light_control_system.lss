
light_control_system.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000012a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000017e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000017e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007c7  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000588  00000000  00000000  00000a03  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002b0  00000000  00000000  00000f8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000084  00000000  00000000  0000123c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041f  00000000  00000000  000012c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000004c  00000000  00000000  000016df  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000172b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 8e 00 	call	0x11c	; 0x11c <main>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z8mcu_initv>:
}

//initialize micro controller
void mcu_init()
{
	DDRA = 0xFF;//set lights port as output
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0x00;//set port C as input
  70:	14 ba       	out	0x14, r1	; 20
  72:	08 95       	ret

00000074 <_Z8light_oni>:
}

//switch on light connected to pin 
void light_on(int pin)
{
	LIGHTS_PORT |= (1<<pin);
  74:	9b b3       	in	r25, 0x1b	; 27
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	30 e0       	ldi	r19, 0x00	; 0
  7a:	02 c0       	rjmp	.+4      	; 0x80 <_Z8light_oni+0xc>
  7c:	22 0f       	add	r18, r18
  7e:	33 1f       	adc	r19, r19
  80:	8a 95       	dec	r24
  82:	e2 f7       	brpl	.-8      	; 0x7c <_Z8light_oni+0x8>
  84:	29 2b       	or	r18, r25
  86:	2b bb       	out	0x1b, r18	; 27
  88:	08 95       	ret

0000008a <_Z9light_offi>:
}

//switch on light connected to pin 
void light_off(int pin)
{
	LIGHTS_PORT &= ~(1<<pin);
  8a:	9b b3       	in	r25, 0x1b	; 27
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	30 e0       	ldi	r19, 0x00	; 0
  90:	02 c0       	rjmp	.+4      	; 0x96 <_Z9light_offi+0xc>
  92:	22 0f       	add	r18, r18
  94:	33 1f       	adc	r19, r19
  96:	8a 95       	dec	r24
  98:	e2 f7       	brpl	.-8      	; 0x92 <_Z9light_offi+0x8>
  9a:	20 95       	com	r18
  9c:	29 23       	and	r18, r25
  9e:	2b bb       	out	0x1b, r18	; 27
  a0:	08 95       	ret

000000a2 <_Z19manual_light_switchv>:
}

void manual_light_switch()
{
	
	if ( (LIGHTS_SWITCH && (1<<LLT1_SWITCH)) == 0 )
  a2:	83 b3       	in	r24, 0x13	; 19
  a4:	81 11       	cpse	r24, r1
  a6:	05 c0       	rjmp	.+10     	; 0xb2 <_Z19manual_light_switchv+0x10>
	{
		light_on(LLT1);
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	0e 94 3a 00 	call	0x74	; 0x74 <_Z8light_oni>
  b0:	04 c0       	rjmp	.+8      	; 0xba <_Z19manual_light_switchv+0x18>
	}
	else
	{
		light_off(LLT1);
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	0e 94 45 00 	call	0x8a	; 0x8a <_Z9light_offi>
	} 
	
	
	if ( (LIGHTS_SWITCH && (1<<LLT2_SWITCH)) == 0 )
  ba:	83 b3       	in	r24, 0x13	; 19
  bc:	81 11       	cpse	r24, r1
  be:	05 c0       	rjmp	.+10     	; 0xca <_Z19manual_light_switchv+0x28>
	{
		light_on(LLT2);
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 3a 00 	call	0x74	; 0x74 <_Z8light_oni>
  c8:	04 c0       	rjmp	.+8      	; 0xd2 <_Z19manual_light_switchv+0x30>
	}
	else
	{
		light_off(LLT2);
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 45 00 	call	0x8a	; 0x8a <_Z9light_offi>
	} 
	
	
	if ( (LIGHTS_SWITCH && (1<<LLT3_SWITCH)) == 0 )
  d2:	83 b3       	in	r24, 0x13	; 19
  d4:	81 11       	cpse	r24, r1
  d6:	05 c0       	rjmp	.+10     	; 0xe2 <_Z19manual_light_switchv+0x40>
	{
		light_on(LLT3);
  d8:	82 e0       	ldi	r24, 0x02	; 2
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 3a 00 	call	0x74	; 0x74 <_Z8light_oni>
  e0:	04 c0       	rjmp	.+8      	; 0xea <_Z19manual_light_switchv+0x48>
	}
	else
	{
		light_off(LLT3);
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 45 00 	call	0x8a	; 0x8a <_Z9light_offi>
	}
	
	
	
	if ( (LIGHTS_SWITCH && (1<<LLT4_SWITCH)) == 0 )
  ea:	83 b3       	in	r24, 0x13	; 19
  ec:	81 11       	cpse	r24, r1
  ee:	05 c0       	rjmp	.+10     	; 0xfa <_Z19manual_light_switchv+0x58>
	{
		light_on(LLT4);
  f0:	83 e0       	ldi	r24, 0x03	; 3
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 3a 00 	call	0x74	; 0x74 <_Z8light_oni>
  f8:	04 c0       	rjmp	.+8      	; 0x102 <_Z19manual_light_switchv+0x60>
	}
	else
	{
		light_off(LLT4);
  fa:	83 e0       	ldi	r24, 0x03	; 3
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 45 00 	call	0x8a	; 0x8a <_Z9light_offi>
	} 

	
	
	if ( (LIGHTS_SWITCH && (1<<SECURITY_SWITCH)) == 0 )
 102:	83 b3       	in	r24, 0x13	; 19
 104:	81 11       	cpse	r24, r1
 106:	05 c0       	rjmp	.+10     	; 0x112 <_Z19manual_light_switchv+0x70>
	{
		light_on(SECURITY);
 108:	84 e0       	ldi	r24, 0x04	; 4
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	0e 94 3a 00 	call	0x74	; 0x74 <_Z8light_oni>
 110:	08 95       	ret
	}
	else
	{
		light_off(SECURITY);
 112:	84 e0       	ldi	r24, 0x04	; 4
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	0e 94 45 00 	call	0x8a	; 0x8a <_Z9light_offi>
 11a:	08 95       	ret

0000011c <main>:
void mcu_init(); 
void manual_light_switch(); //switch lights on and off manually

int main(void)
{
	mcu_init();
 11c:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8mcu_initv>
	
    while (1)
	{
		
		manual_light_switch();
 120:	0e 94 51 00 	call	0xa2	; 0xa2 <_Z19manual_light_switchv>
 124:	fd cf       	rjmp	.-6      	; 0x120 <main+0x4>

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
